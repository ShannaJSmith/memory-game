{"ast":null,"code":"var _jsxFileName = \"/Users/shannasmith/code/projects/memory/memory-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [{\n  src: 'images/brook.png'\n}, {\n  src: 'images/chopper.png'\n}, {\n  src: 'images/franky.png'\n}, {\n  src: 'images/luffy.png'\n}, {\n  src: 'images/nami.png'\n}, {\n  src: 'images/robin.png'\n}, {\n  src: 'images/sanji.png'\n}, {\n  src: 'images/ussop.png'\n}, {\n  src: 'images/zoro.png'\n}, {\n  src: 'images/whitebeard.png'\n}];\n\nfunction App() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0); // to shuffle cards:\n\n  const shuffleCards = () => {\n    const shuffledCards = [...images, ...images].sort(() => Math.random() - 0.5).map(card => ({ ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n  }; // console.log('cards:', cards, 'turns:', turns);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jolly Roger Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"front\",\n            src: card.src,\n            alt: \"front\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"back\",\n            src: \"images/cover.png\",\n            alt: \"cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DgXGRJOMO6ABd1pIeltbGt1J/vc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shannasmith/code/projects/memory/memory-game/src/App.js"],"names":["useState","images","src","App","cards","setCards","turns","setTurns","shuffleCards","shuffledCards","sort","Math","random","map","card","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;AAEA,MAAMC,MAAM,GAAG,CACb;AAAEC,EAAAA,GAAG,EAAE;AAAP,CADa,EAEb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CAFa,EAGb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CAHa,EAIb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CAJa,EAKb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CALa,EAMb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CANa,EAOb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CAPa,EAQb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CARa,EASb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CATa,EAUb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CAVa,CAAf;;AAaA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC,CAFa,CAIb;;AACA,QAAMQ,YAAY,GAAG,MAAM;AACzB,UAAMC,aAAa,GAAG,CAAC,GAAGR,MAAJ,EAAY,GAAGA,MAAf,EACnBS,IADmB,CACd,MAAMC,IAAI,CAACC,MAAL,KAAgB,GADR,EAEnBC,GAFmB,CAEdC,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWC,MAAAA,EAAE,EAAEJ,IAAI,CAACC,MAAL;AAAf,KAAX,CAFe,CAAtB;AAIAP,IAAAA,QAAQ,CAACI,aAAD,CAAR;AACAF,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GAPD,CALa,CAcb;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGJ,KAAK,CAACS,GAAN,CAAWC,IAAD,iBACT;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAuB,YAAA,GAAG,EAAEA,IAAI,CAACZ,GAAjC;AAAsC,YAAA,GAAG,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAsB,YAAA,GAAG,EAAC,kBAA1B;AAA6C,YAAA,GAAG,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAA2BY,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAhCQZ,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nconst images = [\n  { src: 'images/brook.png' },\n  { src: 'images/chopper.png' },\n  { src: 'images/franky.png' },\n  { src: 'images/luffy.png' },\n  { src: 'images/nami.png' },\n  { src: 'images/robin.png' },\n  { src: 'images/sanji.png' },\n  { src: 'images/ussop.png' },\n  { src: 'images/zoro.png' },\n  { src: 'images/whitebeard.png' },\n];\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n\n  // to shuffle cards:\n  const shuffleCards = () => {\n    const shuffledCards = [...images, ...images]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  // console.log('cards:', cards, 'turns:', turns);\n\n  return (\n    <div className=\"App\">\n      <h1>Jolly Roger Memory Game</h1>\n      <button onClick={shuffleCards}>New Game</button>\n      <div className=\"card-grid\">\n        {cards.map((card) => (\n          <div className=\"card\" key={card.id}>\n            <div>\n              <img className=\"front\" src={card.src} alt=\"front\" />\n              <img className=\"back\" src=\"images/cover.png\" alt=\"cover\" />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}